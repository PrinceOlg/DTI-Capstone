# Generated by Django 5.2 on 2025-07-24 01:06

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0016_orderofpayment_permitfee'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('electronics', 'Electronics'), ('aircon_refrigeration', 'Aircon/Refrigeration'), ('office_machines', 'Office Machines'), ('motor_vehicles', 'Motor Vehicles and Heavy Equipment'), ('wheel_services', 'Complete Wheel Services'), ('engineering_works', 'Engines and Engineering Works (Machine Shops)'), ('welding', 'Welding Services'), ('other_services', 'Other Services')], max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InspectionValidationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_business', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('type_of_application_activity', models.CharField(choices=[('new', 'New Application'), ('renewal', 'Renewal Application'), ('monitoring', 'Monitoring/Issuance of SCO'), ('continuing', 'Continuing Accreditation')], max_length=50)),
                ('years_in_service', models.PositiveIntegerField(blank=True, null=True)),
                ('is_main_office', models.BooleanField(default=False)),
                ('is_branch', models.BooleanField(default=False)),
                ('business_name_cert', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('business_name_cert_remarks', models.CharField(blank=True, max_length=255)),
                ('accreditation_cert', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('accreditation_cert_remarks', models.CharField(blank=True, max_length=255)),
                ('service_rates', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('service_rates_remarks', models.CharField(blank=True, max_length=255)),
                ('tools_equipment_complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('tools_equipment_serial_no', models.CharField(blank=True, max_length=255)),
                ('racmac_sres_recovery_machine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('proof_acquisition_recovery_machine', models.CharField(blank=True, max_length=255)),
                ('employed_technicians_count', models.PositiveIntegerField(blank=True, null=True)),
                ('average_technician_experience', models.PositiveIntegerField(blank=True, help_text='Experience in years', null=True)),
                ('tesda_certification_nc', models.CharField(blank=True, max_length=255)),
                ('continuous_training_program', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('list_employees_past_2_years', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('refrigerant_storage_disposal_system', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('office_work_area_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('working_stalls_count', models.PositiveIntegerField(blank=True, null=True)),
                ('tool_equipment_storage_existing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('tool_equipment_storage_adequate', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('existing_record_keeping_system', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('record_keeping_suitable', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('customers_reception_waiting_area_existing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('customers_reception_waiting_area_adequate', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('fire_extinguishers_count', models.PositiveIntegerField(blank=True, null=True)),
                ('available_personal_protective_equipment', models.CharField(blank=True, max_length=255)),
                ('security_personnel_count', models.PositiveIntegerField(blank=True, null=True)),
                ('medical_kit_available', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('inflammable_areas', models.CharField(blank=True, help_text='Areas for inflammables such as gasoline, oil, paint, etc.', max_length=255)),
                ('insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('insurance_coverage_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount in PHP', max_digits=15, null=True)),
                ('complaints_handling_process_yes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('complaints_handling_process_no', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('complaints_handling_documented', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('customer_satisfaction_feedback_form_yes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('customer_satisfaction_feedback_form_no', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('findings_remarks', models.TextField(blank=True)),
                ('recommendation_approval', models.BooleanField(default=False)),
                ('recommendation_disapproval', models.BooleanField(default=False)),
                ('recommendation_monitoring_issuance_sco', models.BooleanField(default=False)),
                ('recommendation_new_application', models.BooleanField(default=False)),
                ('recommendation_renewal_application', models.BooleanField(default=False)),
                ('recommendation_continuing_accreditation', models.BooleanField(default=False)),
                ('inspected_by_accreditation_officer', models.CharField(blank=True, max_length=255)),
                ('inspected_by_member', models.CharField(blank=True, max_length=255)),
                ('certification_text', models.TextField(blank=True, default='This is to certify that the Accreditation Officer/s conducted the inspection in our premises today, and the information/data in this Inspection and Validation Report, gathered during the inspection are true and correct.')),
                ('authorized_signatory_name', models.CharField(blank=True, max_length=255)),
                ('authorized_signatory_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('services_offered', models.ManyToManyField(blank=True, related_name='inspection_reports', to='documents.service')),
            ],
            options={
                'verbose_name': 'Inspection and Validation Report',
                'verbose_name_plural': 'Inspection and Validation Reports',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='documents.servicecategory'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('category', 'name')},
        ),
    ]
