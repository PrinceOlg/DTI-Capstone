# Generated by Django 5.2 on 2025-07-14 07:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0014_alter_servicerepairaccreditationapplication_star_rating'),
    ]

    operations = [
        migrations.CreateModel(
            name='InspectionValidationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('business_name', models.CharField(max_length=255)),
                ('business_address', models.TextField()),
                ('application_type', models.CharField(choices=[('new', 'New'), ('renewal', 'Renewal'), ('monitoring', 'Monitoring')], max_length=15)),
                ('years_in_service', models.PositiveIntegerField(help_text='Number of years in service business', validators=[django.core.validators.MinValueValidator(0)])),
                ('office_type', models.CharField(choices=[('main', 'Main'), ('branch', 'Branch')], max_length=10)),
                ('validate_all_branches', models.BooleanField(default=False, help_text='Validate if all branches are accredited')),
                ('business_name_certificate', models.BooleanField(default=False)),
                ('business_name_certificate_remarks', models.TextField(blank=True)),
                ('accreditation_certificate', models.BooleanField(default=False)),
                ('accreditation_certificate_remarks', models.TextField(blank=True)),
                ('service_rates', models.BooleanField(default=False)),
                ('service_rates_remarks', models.TextField(blank=True)),
                ('other_services', models.TextField(blank=True, help_text='Other services offered')),
                ('tools_equipment_complete', models.BooleanField(default=False)),
                ('tools_equipment_serial_no', models.CharField(blank=True, max_length=100)),
                ('has_recovery_machine', models.BooleanField(default=False)),
                ('recovery_machine_proof', models.TextField(blank=True)),
                ('num_employed_technicians', models.PositiveIntegerField(default=0)),
                ('avg_technician_experience', models.PositiveIntegerField(default=0, help_text='Average technician experience in years')),
                ('coc_certification', models.CharField(blank=True, help_text='COC certification', max_length=50)),
                ('tesda_certification', models.CharField(blank=True, help_text='TESDA certification NC', max_length=50)),
                ('has_training_program', models.BooleanField(default=False)),
                ('has_training_list', models.BooleanField(default=False)),
                ('refrigerant_recovery_disposal_consistent', models.BooleanField(default=False)),
                ('shop_area_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('working_stalls_bays', models.PositiveIntegerField(default=0)),
                ('tool_equipment_storage_existing', models.BooleanField(default=False)),
                ('tool_equipment_storage_adequate', models.BooleanField(default=False)),
                ('record_keeping_system_existing', models.BooleanField(default=False)),
                ('record_keeping_system_adequate', models.BooleanField(default=False)),
                ('record_keeping_system_suitable', models.BooleanField(default=False)),
                ('customer_reception_existing', models.BooleanField(default=False)),
                ('customer_reception_adequate', models.BooleanField(default=False)),
                ('customer_reception_suitable', models.BooleanField(default=False)),
                ('fire_extinguishers_count', models.PositiveIntegerField(default=0)),
                ('medical_kit_available', models.BooleanField(default=False)),
                ('security_personnel_count', models.PositiveIntegerField(default=0)),
                ('flammable_areas_safe', models.BooleanField(default=False)),
                ('insurance_type', models.CharField(blank=True, max_length=100)),
                ('insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('insurance_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('insurance_currency', models.CharField(default='PHP', max_length=10)),
                ('has_complaints_process', models.BooleanField(default=False)),
                ('complaints_process_documented', models.BooleanField(default=False)),
                ('has_csf_form', models.BooleanField(default=False)),
                ('findings_remarks', models.TextField(blank=True)),
                ('inspector_name', models.CharField(blank=True, max_length=100)),
                ('inspector_title', models.CharField(default='Accreditation Officer/Leader', max_length=100)),
                ('member_name', models.CharField(blank=True, max_length=100)),
                ('inspection_date', models.DateField(blank=True, null=True)),
                ('authorized_signatory_name', models.CharField(blank=True, max_length=100)),
                ('certification_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Inspection/Validation Report',
                'verbose_name_plural': 'Inspection/Validation Reports',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_category', models.CharField(choices=[('electronics', 'Electronics'), ('electrical', 'Electrical'), ('aircon_refrigeration', 'Aircon/Refrigeration'), ('office_machine', 'Office Machine and Data Processing Equipment'), ('medical_dental', 'Medical/Dental'), ('motor_vehicles', 'Motor Vehicles and Heavy Equipment'), ('engines_engineering', 'Engines and Engineering Works (Machine Shops)')], max_length=30)),
                ('subcategory', models.CharField(max_length=150)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('category_type', models.CharField(choices=[('main', 'Main Category'), ('sub', 'Sub Category'), ('item', 'Service Item')], default='item', max_length=10)),
                ('is_selectable', models.BooleanField(default=True, help_text='Can this category be selected in reports?')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documents.servicecategory')),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['main_category', 'subcategory'],
                'unique_together': {('main_category', 'subcategory')},
            },
        ),
        migrations.CreateModel(
            name='ReportRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.CharField(choices=[('approval', 'Approval'), ('disapproval', 'Disapproval'), ('monitoring_sco', 'Monitoring/Issuance of SCO'), ('new_application', 'New Application'), ('renewal_application', 'Renewal Application'), ('continuing_accreditation', 'Continuing Accreditation')], max_length=25)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='documents.inspectionvalidationreport')),
            ],
            options={
                'verbose_name': 'Report Recommendation',
                'verbose_name_plural': 'Report Recommendations',
                'unique_together': {('report', 'recommendation')},
            },
        ),
        migrations.CreateModel(
            name='ReportService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_services', to='documents.inspectionvalidationreport')),
                ('service_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.servicecategory')),
            ],
            options={
                'verbose_name': 'Report Service',
                'verbose_name_plural': 'Report Services',
                'unique_together': {('report', 'service_category')},
            },
        ),
    ]
